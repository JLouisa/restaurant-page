(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(537),r=n.n(a),o=n(645),i=n.n(o)()(r());i.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);a&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],d=a.base?c[0]+a.base:c[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var p=n(u),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(h);else{var m=r(h,a);a.byIndex=s,t.splice(s,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var o=a(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);t[s].references--}for(var c=a(e,r),d=0;d<o.length;d++){var l=n(o[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}o=c}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,r&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={id:a,exports:{}};return e[a](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!e;)e=a[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{const e=n.p+"fd9147cb67bde9d00071.jpg",t=n.p+"8f30ffe40207e2e7025b.jpg";!function(){const n=document.querySelector("#content"),a=document.createElement("div"),r=document.createElement("nav"),o=document.createElement("footer");r.id="navBar",n.appendChild(r);const i=document.createElement("header");i.id="head",r.appendChild(i);const s=document.createElement("ul");s.id="navList",r.appendChild(s);const c=document.createElement("li"),d=document.createElement("li"),l=document.createElement("li");c.textContent="Home",d.textContent="Menu",l.textContent="Contact",s.appendChild(c),s.appendChild(d),s.appendChild(l);const u=document.createElement("h1");u.classList.add("welcomeTitle"),u.textContent="Welcome to Dessert Haven Delights",i.appendChild(u);const p=document.createElement("div");p.classList.add("bio"),a.appendChild(p),p.textContent='Experience culinary bliss at "Dessert Haven Delights," where every visit is a journey through exquisite\n    flavors and impeccable service. Nestled in a cozy ambiance, our restaurant celebrates the art of Italian cuisine\n    with a modern twist. Indulge in a symphony of handcrafted pasta, rich sauces, and locally sourced\n    ingredients that dance harmoniously on your palate. Our passionate chefs, dedicated to perfection, craft\n    each dish with love. From the first bite to the last, you\'ll be immersed in a culinary symphony that\n    transcends ordinary dining. "Dessert Haven Delights" isn\'t just a restaurant; it\'s an unforgettable\n    gastronomic experience that captures the essence of Italian culinary magic',a.classList.add("main"),n.appendChild(a);const h=document.createElement("div");h.classList.add("food1"),a.appendChild(h);const m=document.createElement("img");m.classList.add("image1"),m.alt="green and white cake slice",m.src=e,h.appendChild(m);const f=document.createElement("div");f.classList.add("food1"),a.appendChild(f),f.textContent="Savor the divine delight of our green and white cake slice, a luscious symphony of flavors and visual";const v=document.createElement("div");v.classList.add("quote"),v.textContent="Embark on a journey of sweet sensations, where every bite is a moment of pure\n  enchantment at Dessert Haven Delights",a.appendChild(v);const g=document.createElement("div");g.classList.add("food2"),a.appendChild(g);const y=document.createElement("img");y.classList.add("image2"),y.alt="green smoothie with fruits",y.src=t,g.appendChild(y);const b=document.createElement("div");b.textContent="Indulge in pure bliss with our refreshing smoothie, a burst of vibrant flavors that invigorate your\n    senses with each sip.",a.appendChild(b),o.classList.add("foot"),o.textContent="Â©2023 | Restaurant Dessert Haven Delights",n.appendChild(o)}();var a=n(379),r=n.n(a),o=n(795),i=n.n(o),s=n(569),c=n.n(s),d=n(565),l=n.n(d),u=n(216),p=n.n(u),h=n(589),m=n.n(h),f=n(426),v={};v.styleTagTransform=m(),v.setAttributes=l(),v.insert=c().bind(null,"head"),v.domAPI=i(),v.insertStyleElement=p(),r()(f.Z,v),f.Z&&f.Z.locals&&f.Z.locals;const g=n.p+"8cf6e8d548cf0e31d584.jpg",y=n.p+"171b7b3c764e1f333a8a.jpg",b=n.p+"dec32a71dbade2bd960f.jpg",C=(function(){const e=document.getElementById("content"),t=document.createElement("div");e.appendChild(t),t.classList.add("mainMenu");let n=[],a=[],r=[],o=[],i=["Berry Bliss Pancake Stack","Decadent Chocolate Delight Cake","Vanilla Raspberry Dream Tart"],s=[g,y,b],c=["delicious pancakes","delicious cake","delicious tart"],d=[],l=["Indulge in the irresistible delight of our pancake masterpiece,\n      generously adorned with a delicate snowfall of powdered sugar and\n      crowned with vibrant, plump raspberries. Each bite presents a harmonious\n       symphony of textures and flavors, blending the rich warmth of\n       pancakes with the gentle sweetness of berries. A taste worth savoring!","Experience pure decadence with our layered rectangular cake, a\n       symphony of flavors and textures. Velvety powdered chocolate covers\n       each luscious layer, while rivers of rich chocolate sauce cascade\n       indulgently. The finishing touch: a sprinkle of crunchy peanuts.\n       A dessert that's an irresistible ode to chocolate lovers. Satisfy\n       your cravings today!","Savor the exquisite harmony of flavors in our tart menu delight.\n        A buttery, flaky crust cradles a luscious vanilla whipcream filling,\n        perfectly balanced with the brightness of fresh raspberries.\n        Each bite offers a symphony of sweet and tangy notes, a dessert\n        that epitomizes elegance and taste. Treat yourself to this divine\n        pleasure!"];for(let e=0;e<3;e++)n[e]=document.createElement("div"),n[e].classList.add(`menuItems${e}`),t.appendChild(n[e]),a[e]=document.createElement("img"),a[e].classList.add(`images${e}`),a[e].src=s[e],a[e].alt=c[e],n[e].appendChild(a[e]),r[e]=document.createElement("div"),r[e].classList.add(`divText${e}`),n[e].appendChild(r[e]),o[e]=document.createElement("h1"),o[e].classList.add(`textTitle${e}`),o[e].textContent=i[e],r[e].appendChild(o[e]),d[e]=document.createElement("div"),d[e].classList.add(`text${e}`),d[e].textContent=l[e],r[e].appendChild(d[e])}(),n.p+"b0d5ca70160e78f38eef.png"),E=n.p+"5eef2a1d661a1df3127a.png",w=n.p+"9e88eb85cfb0a1d0a2a3.png",x=n.p+"99ec79c0c435b5ec0821.png";!function(){const e=document.querySelector("#content"),t=document.createElement("div"),n=document.createElement("div"),a=document.createElement("div"),r={"Operating Hours":"3pm till 12pm","Phone Number":"+1 (608) 251-1802","E-mail":"info@DessertHavenDelights.com",Address:"707 S Mills St, Shadowfen Marshes, Kingdom of Eldoria",Directions:"Embark from serene Silverlake Village through Misty Mountains \n        to the magical Enchanted Valley. Reach bustling Emerald City, \n        then cross the open Whispering Plains. Explore chilling Frostbite \n        Caverns and shimmering Starfall Canyon. Relax on the Golden \n        Coastline before delving into mysterious Shadowfen Marshes.","Parking Information":"We offer valley parking for your horses, Pegasus Runner, \n        Unicorn Charger and Griffonsteed. Unfortunately we don't offer\n        valley parking for Tamed Ogres."};t.classList.add("contact"),e.appendChild(t),n.classList.add("contactInfo"),t.appendChild(n);const o=document.createElement("h1");o.classList.add("contactTitle"),o.textContent="Dessert Haven Delights Contact",n.appendChild(o);let i=[],s=[],c=[],d=[],l=["facebook icon","instagram icon","whatsapp icon","whatsapp icon"],u=[C,E,w,x];for(let e=0;e<1;e++)for(let t in r)i[e]=document.createElement("div"),c[e]=document.createElement("h1"),s[e]=document.createElement("div"),i[e].classList.add(`divContact${e}`),c[e].classList.add(`h1C${e}`),s[e].classList.add(`contactText${e}`),c[e].textContent=t,s[e].textContent=r[t],n.appendChild(i[e]),i[e].appendChild(c[e]),i[e].appendChild(s[e]);a.classList.add("socials"),t.appendChild(a);const p=document.createElement("h1");p.classList.add("titleSocials"),p.textContent="Our Socials",a.appendChild(p);for(let e=0;e<4;e++)d[e]=document.createElement("img"),d[e].classList.add(`icons${e}`),d[e].alt=l[e],d[e].src=u[e],a.appendChild(d[e])}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,