(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(537),o=n.n(a),r=n(645),i=n.n(r)()(o());i.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);a&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},i=[],s=0;s<e.length;s++){var c=e[s],d=a.base?c[0]+a.base:c[0],l=r[d]||0,u="".concat(d," ").concat(l);r[d]=l+1;var p=n(u),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(h);else{var m=o(h,a);a.byIndex=s,t.splice(s,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var s=n(r[i]);t[s].references--}for(var c=a(e,o),d=0;d<r.length;d++){var l=n(r[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=c}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,o&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={id:a,exports:{}};return e[a](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&!e;)e=a[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{!function(){const e=document.querySelector("#content"),t=document.createElement("nav");t.id="navBar",e.appendChild(t);const n=document.createElement("header");n.id="head",t.appendChild(n);const a=document.createElement("ul");a.id="navList",t.appendChild(a);const o=document.createElement("li"),r=document.createElement("li"),i=document.createElement("li");o.classList.add("navHome"),r.classList.add("navMenu"),i.classList.add("navContact"),o.textContent="Home",r.textContent="Menu",i.textContent="Contact",a.appendChild(o),a.appendChild(r),a.appendChild(i)}();const e=n.p+"fd9147cb67bde9d00071.jpg",t=n.p+"8f30ffe40207e2e7025b.jpg",a=function(){const n=document.querySelector("#content"),a=document.createElement("div"),o=document.createElement("div");n.appendChild(a),a.appendChild(o);const r=document.createElement("h1");r.classList.add("welcomeTitle"),r.textContent="Welcome to Dessert Haven Delights",o.appendChild(r);const i=document.createElement("div");i.classList.add("bio"),o.appendChild(i),i.textContent='Experience culinary bliss at "Dessert Haven Delights," where every visit is a journey through exquisite\n    flavors and impeccable service. Nestled in a cozy ambiance, our restaurant celebrates the art of Italian cuisine\n    with a modern twist. Indulge in a symphony of handcrafted pasta, rich sauces, and locally sourced\n    ingredients that dance harmoniously on your palate. Our passionate chefs, dedicated to perfection, craft\n    each dish with love. From the first bite to the last, you\'ll be immersed in a culinary symphony that\n    transcends ordinary dining. "Dessert Haven Delights" isn\'t just a restaurant; it\'s an unforgettable\n    gastronomic experience that captures the essence of Italian culinary magic',o.classList.add("main");const s=document.createElement("div");s.classList.add("food1"),o.appendChild(s);const c=document.createElement("img");c.classList.add("image1"),c.alt="green and white cake slice",c.src=e,s.appendChild(c);const d=document.createElement("div");d.classList.add("food1"),o.appendChild(d),d.textContent="Savor the divine delight of our green and white cake slice, a luscious symphony of flavors and visual";const l=document.createElement("div");l.classList.add("quote"),l.textContent="Embark on a journey of sweet sensations, where every bite is a moment of pure\n  enchantment at Dessert Haven Delights",o.appendChild(l);const u=document.createElement("div");u.classList.add("food2"),o.appendChild(u);const p=document.createElement("img");p.classList.add("image2"),p.alt="green smoothie with fruits",p.src=t,u.appendChild(p);const h=document.createElement("div");return h.textContent="Indulge in pure bliss with our refreshing smoothie, a burst of vibrant flavors that invigorate your\n    senses with each sip.",o.appendChild(h),{hide:function(){o.setAttribute("style","display: none")},show:function(){o.setAttribute("style","display: block")}}}();var o=n(379),r=n.n(o),i=n(795),s=n.n(i),c=n(569),d=n.n(c),l=n(565),u=n.n(l),p=n(216),h=n.n(p),m=n(589),f=n.n(m),v=n(426),y={};y.styleTagTransform=f(),y.setAttributes=u(),y.insert=d().bind(null,"head"),y.domAPI=s(),y.insertStyleElement=h(),r()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;const g=n.p+"8cf6e8d548cf0e31d584.jpg",b=n.p+"171b7b3c764e1f333a8a.jpg",C=n.p+"dec32a71dbade2bd960f.jpg",E=function(){const e=document.getElementById("content"),t=document.createElement("div"),n=document.createElement("div");e.appendChild(t),t.appendChild(n),n.classList.add("mainMenu");let a=[],o=[],r=[],i=[],s=["Berry Bliss Pancake Stack","Decadent Chocolate Delight Cake","Vanilla Raspberry Dream Tart"],c=[g,b,C],d=["delicious pancakes","delicious cake","delicious tart"],l=[],u=["Indulge in the irresistible delight of our pancake masterpiece,\n      generously adorned with a delicate snowfall of powdered sugar and\n      crowned with vibrant, plump raspberries. Each bite presents a harmonious\n       symphony of textures and flavors, blending the rich warmth of\n       pancakes with the gentle sweetness of berries. A taste worth savoring!","Experience pure decadence with our layered rectangular cake, a\n       symphony of flavors and textures. Velvety powdered chocolate covers\n       each luscious layer, while rivers of rich chocolate sauce cascade\n       indulgently. The finishing touch: a sprinkle of crunchy peanuts.\n       A dessert that's an irresistible ode to chocolate lovers. Satisfy\n       your cravings today!","Savor the exquisite harmony of flavors in our tart menu delight.\n        A buttery, flaky crust cradles a luscious vanilla whipcream filling,\n        perfectly balanced with the brightness of fresh raspberries.\n        Each bite offers a symphony of sweet and tangy notes, a dessert\n        that epitomizes elegance and taste. Treat yourself to this divine\n        pleasure!"];for(let e=0;e<3;e++)a[e]=document.createElement("div"),a[e].classList.add(`menuItems${e}`),n.appendChild(a[e]),o[e]=document.createElement("img"),o[e].classList.add(`images${e}`),o[e].src=c[e],o[e].alt=d[e],a[e].appendChild(o[e]),r[e]=document.createElement("div"),r[e].classList.add(`divText${e}`),a[e].appendChild(r[e]),i[e]=document.createElement("h1"),i[e].classList.add(`textTitle${e}`),i[e].textContent=s[e],r[e].appendChild(i[e]),l[e]=document.createElement("div"),l[e].classList.add(`text${e}`),l[e].textContent=u[e],r[e].appendChild(l[e]);return{hide:()=>{n.setAttribute("style","display: none")},show:()=>{n.setAttribute("style","display: block")}}}(),w=n.p+"b0d5ca70160e78f38eef.png",x=n.p+"5eef2a1d661a1df3127a.png",L=n.p+"9e88eb85cfb0a1d0a2a3.png",S=n.p+"99ec79c0c435b5ec0821.png",k=function(){const e=document.querySelector("#content"),t=document.createElement("div");e.appendChild(t);const n=document.createElement("div");t.appendChild(n);const a=document.createElement("div"),o=document.createElement("div"),r={"Operating Hours":"mon/sun: 3pm till 12pm","Phone Number":"+1 (608) 251-1802","E-mail":"info@DessertHavenDelights.com",Address:"707 S Mills St, Shadowfen Marshes, Kingdom of Eldoria",Directions:"Embark from serene Silverlake Village through Misty Mountains \n        to the magical Enchanted Valley. Reach bustling Emerald City, \n        then cross the open Whispering Plains. Explore chilling Frostbite \n        Caverns and shimmering Starfall Canyon. Relax on the Golden \n        Coastline before delving into mysterious Shadowfen Marshes.","Parking Information":"We offer valley parking for your horses, Pegasus Runner, \n        Unicorn Charger and Griffonsteed. Unfortunately we don't offer\n        valley parking for Tamed Ogres."};n.classList.add("contact"),e.appendChild(n),a.classList.add("contactInfo"),n.appendChild(a);const i=document.createElement("h1");i.classList.add("contactTitle"),i.textContent="Dessert Haven Delights Contact",a.appendChild(i);let s=[],c=[],d=[],l=[],u=["facebook icon","instagram icon","whatsapp icon","whatsapp icon"],p=[w,x,L,S];for(let e=0;e<1;e++)for(let t in r)s[e]=document.createElement("div"),d[e]=document.createElement("h1"),c[e]=document.createElement("div"),s[e].classList.add(`divContact${e}`),d[e].classList.add(`h1C${e}`),c[e].classList.add(`contactText${e}`),d[e].textContent=t,c[e].textContent=r[t],a.appendChild(s[e]),s[e].appendChild(d[e]),s[e].appendChild(c[e]);o.classList.add("socials"),n.appendChild(o);const h=document.createElement("h1");h.classList.add("titleSocials"),h.textContent="Our Socials",o.appendChild(h);for(let e=0;e<4;e++)l[e]=document.createElement("img"),l[e].classList.add(`icons${e}`),l[e].alt=u[e],l[e].src=p[e],o.appendChild(l[e]);return{hide:()=>{n.setAttribute("style","display: none")},show:()=>{n.setAttribute("style","display: block")}}}(),T=document.querySelector("#content"),D=(document.createElement("div"),document.createElement("footer"));D.classList.add("foot"),D.textContent="©2023 | Restaurant Dessert Haven Delights",T.appendChild(D),a.show(),E.hide(),k.hide(),document.querySelector(".navHome").addEventListener("click",(()=>{a.show(),E.hide(),k.hide()})),document.querySelector(".navMenu").addEventListener("click",(()=>{a.hide(),E.show(),k.hide()})),document.querySelector(".navContact").addEventListener("click",(()=>{a.hide(),E.hide(),k.show()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,